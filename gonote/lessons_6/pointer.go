package main

import (
	"fmt"
)

func ptr(a *int) int {

	fmt.Println("此时*a的值", *a)
	fmt.Println("方法内的a的值", a, " 也就是将b的内存地址传给了a;用的是&b=取b的内存地址")

	// 因为a的类型是*int,所以此时a存的是一个内存地址,初始值是0x0000000
	// ,*a表示这是一个存了"内存地址"的变量
	// 对一个存了内存地址的变量进行赋值时,会对这个内存地址指向的值进行变动
	*a += 1
	return *a
}

var b int = 10

/*
指针的概念
b 内存的值是 10
&b 取b的内存地址 (我这里是0x515140)
*a 是值a这个变量是一个存储 内存地址 的变量
此时打印a的值是一个内存地址
打印*a 则是打印a的内存地址指向的值
*/
func main() {

	fmt.Println("方法前的 b=", b)
	fmt.Println("方法前的b的地址", &b, "也就是&b的值")

	// *int 是一个指针类型的值,给这种类型的值赋值需要传入一个内存地址,所以用&b传参
	b := ptr(&b)
	fmt.Println("方法后的 b=", b, "因为方法内用*a进行赋值,是改变a存储的地址-->指向的值")
}
